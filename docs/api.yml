openapi: "3.0.2"
info:
  title: "StyleGAN2 Interactive Webclient API"
  version: "2.0.0"
servers:
  - url: "http://localhost:8080/api/v2"
paths:
  /models/list:
    get:
      summary: "List all generators and evaluators + their settings"
      tags:
        - "Models"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelsArray"

  /generator/{generatorId}/generate-new-styles:
    put:
      summary: "Generate new styles for a generator"
      tags:
        - "Generator"
      parameters:
        - in: "path"
          name: "generatorId"
          schema:
            type: "integer"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeneratorSettings"
        required: true
      responses:
        "204":
          description: "No Content"
        "404":
          description: "Not Found"

  /generator/{generatorId}/generate:
    post:
      summary: "Generate images from mixed styles and return them in order in a sprite map with the dimensions 1 x <number generated images>"
      tags:
        - "Generator"
      parameters:
        - in: "path"
          name: "generatorId"
          schema:
            type: "integer"
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/StyleConfiguration"
      responses:
        "200":
          description: "OK"
          content:
            image/jpeg:
              schema:
                type: "string"
                format: "binary"

  /generator/generate/{style}:
    get:
      summary: "Get an image generated by a mixed style"
      tags:
        - "Generator"
      parameters:
        - in: "path"
          name: "style"
          schema:
            type: string
            description: "An object in the format of '#/components/schemas/Style' serialized to a string"
          required: true
      responses:
        "200":
          description: "OK"
          content:
            image/jpeg:
              schema:
                type: "string"
                format: "binary"

  /evaluator/{evaluatorId}/evaluate:
    post:
      summary: "Evaluate images from mixed styles and return them in order"
      tags:
        - "Evaluator"
      parameters:
        - in: "path"
          name: "evaluatorId"
          schema:
            type: "integer"
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EvaluateImagesBatch"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number

  /evaluator/{evaluatorId}/evaluate/{style}:
    get:
      summary: "Get the rating of a generated image"
      tags:
        - "Evaluator"
      parameters:
        - in: "path"
          name: "evaluatorId"
          schema:
            type: "integer"
          required: true
        - in: "path"
          name: "style"
          schema:
            type: "string"
            description: "An object of the format '#/components/schemas/EvaluateImage' serialized to string"
          required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: number

components:
  schemas:
    Model:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Unique id of this model"
        name:
          type: "string"
          description: "Human readable name of the model"
      required:
        - "id"
        - "name"
    GeneratorSettings:
      type: "object"
      properties:
        numGenStylesPerLayer:
          type: "integer"
          description: "Number of styles per layer"
        useSameStylesForAllLayers:
          type: "boolean"
          description: "If true the style images per layer will look the same"
        reduceNumberOfLayersBy:
          type: "integer"
          description: "Reducing the number of layers groups together layers in the view. e.g. if 2 layers are reduced the first and second displayed layer will actually be the first and second, and the third and fourth layers."
        stylesFromImages:
          type: "array"
          description: "If present the generated styles will create images similar to these images. The images are stored in base64 encoding."
          items:
            type: "string"
        optimizeStyles:
          type: "number"
          description: "If existent the generated styles will be optimized to one end of the evaluator ratings of the evaluation model with this id."
      required:
        - "numGenStylesPerLayer"
        - "useSameStylesForAllLayers"
        - "reduceNumberOfLayersBy"
    Generator:
      type: "object"
      allOf:
        - $ref: "#/components/schemas/Model"
      properties:
        numberOfLayers:
          type: "integer"
          description: "The number of layers of this model. (not affected by reduceNumberOfLayersBy)"
        settings:
          $ref: "#/components/schemas/GeneratorSettings"
        stepSize:
          type: "number"
          description: "All styles have to be rounded to this step size."
        offlineMode:
          type: "boolean"
          description: "Use only get functions if this is true."
      required:
        - "numberOfLayers"
        - "settings"
        - "stepSize"
        - "offlineMode"
    Evaluator:
      type: "object"
      allOf:
        - $ref: "#/components/schemas/Model"
    StyleConfiguration:
      type: "object"
      description: "Only one of styleArray and singleStyle may be present"
      properties:
        styleArray:
          type: "array"
          items:
            type: "object"
            properties:
              style1:
                type: "integer"
              style2:
                type: "integer"
              proportionStyle1:
                type: "number"
                minimum: 0
                maximum: 1
            required:
              - "style1"
        singleStyle:
          type: "object"
          properties:
            layer:
              type: integer
            id:
              type: integer
          required:
            - "layer"
            - "id"
    ModelsArray:
      type: "object"
      properties:
        generators:
          type: "array"
          items:
            $ref: "#/components/schemas/Generator"
        evaluators:
          type: "array"
          items:
            $ref: "#/components/schemas/Evaluator"
      required:
        - "generators"
        - "evaluators"
    EvaluateImagesBatch:
      type: object
      properties:
        generatorId:
          type: integer
        styles:
          type: array
          items:
            $ref: "#/components/schemas/StyleConfiguration"
      required:
        - "generatorId"
        - "styles"
    Style:
      type: "object"
      properties:
        generatorId:
          type: integer
        style:
          $ref: "#/components/schemas/StyleConfiguration"
      required:
        - "generatorId"
        - "style"
