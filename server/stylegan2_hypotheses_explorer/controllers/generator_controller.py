import connexion

from ..logic.image_batch import ImageBatch
from ..logic.model_loader import ModelLoader
from ..models.generator_settings import GeneratorSettings  # noqa: E501
from ..models.style_configuration import StyleConfiguration  # noqa: E501


def generator_generate_style_get(style):  # noqa: E501
    """Get an image generated by a mixed style

     # noqa: E501

    :param style: 
    :type style: str

    :rtype: str
    """
    raise Exception("Unsupported")


def generator_generator_id_generate_new_styles_put(body, generator_id):  # noqa: E501
    """Generate new styles for a generator

     # noqa: E501

    :param body: 
    :type body: dict | bytes
    :param generator_id: 
    :type generator_id: int

    :rtype: None
    """
    if connexion.request.is_json:
        settings = GeneratorSettings.from_dict(connexion.request.get_json())  # noqa: E501

    generator = ModelLoader.get_generator(generator_id)
    generator.generate_new_styles(settings)
    return ""


def generator_generator_id_generate_post(body, generator_id):  # noqa: E501
    """Generate images from mixed styles and return them in order in a sprite map with the dimensions 1 x &lt;number generated images&gt;

     # noqa: E501

    :param body: 
    :type body: list | bytes
    :param generator_id: 
    :type generator_id: int

    :rtype: str
    """
    if connexion.request.is_json:
        styles = [StyleConfiguration.from_dict(d) for d in connexion.request.get_json()]  # noqa: E501
    generator = ModelLoader.get_generator(generator_id)

    return ImageBatch(generator, styles).generate().send()
