openapi: 3.0.2
info:
  title: StyleGAN2 Interactive Webclient API
  version: 2.0.0
servers:
  - url: http://localhost:8080/api/v2
paths:
  /models/list:
    get:
      tags:
        - Models
      summary: List all generators and evaluators + their settings
      operationId: models_list_get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelsArray"
      x-openapi-router-controller: stylegan2_hypotheses_explorer.controllers.models_controller
  /generator/{generatorId}/generate-new-styles:
    put:
      tags:
        - Generator
      summary: Generate new styles for a generator
      operationId: generator_generator_id_generate_new_styles_put
      parameters:
        - name: generatorId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeneratorSettings"
        required: true
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      x-openapi-router-controller: stylegan2_hypotheses_explorer.controllers.generator_controller
  /generator/{generatorId}/generate:
    post:
      tags:
        - Generator
      summary:
        Generate images from mixed styles and return them in order in a sprite
        map with the dimensions 1 x <number generated images>
      operationId: generator_generator_id_generate_post
      parameters:
        - name: generatorId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/StyleConfiguration"
        required: true
      responses:
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
                x-content-type: image/jpeg
      x-openapi-router-controller: stylegan2_hypotheses_explorer.controllers.generator_controller
  /generator/generate/{style}:
    get:
      tags:
        - Generator
      summary: Get an image generated by a mixed style
      operationId: generator_generate_style_get
      parameters:
        - name: style
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description:
              An object in the format of '#/components/schemas/Style' serialized
              to a string
      responses:
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
                x-content-type: image/jpeg
      x-openapi-router-controller: stylegan2_hypotheses_explorer.controllers.generator_controller
  /evaluator/{evaluatorId}/evaluate:
    post:
      tags:
        - Evaluator
      summary: Evaluate images from mixed styles and return them in order
      operationId: evaluator_evaluator_id_evaluate_post
      parameters:
        - name: evaluatorId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EvaluateImagesBatch"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
                x-content-type: application/json
      x-openapi-router-controller: stylegan2_hypotheses_explorer.controllers.evaluator_controller
  /evaluator/{evaluatorId}/evaluate/{style}:
    get:
      tags:
        - Evaluator
      summary: Get the rating of a generated image
      operationId: evaluator_evaluator_id_evaluate_style_get
      parameters:
        - name: evaluatorId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: style
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
            description:
              An object of the format '#/components/schemas/EvaluateImage'
              serialized to string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: number
                x-content-type: application/json
      x-openapi-router-controller: stylegan2_hypotheses_explorer.controllers.evaluator_controller
components:
  schemas:
    Model:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          description: Unique id of this model
        name:
          type: string
          description: Human readable name of the model
    GeneratorSettings:
      required:
        - numGenStylesPerLayer
        - reduceNumberOfLayersBy
        - useSameStylesForAllLayers
      type: object
      properties:
        numGenStylesPerLayer:
          type: integer
          description: Number of styles per layer
        useSameStylesForAllLayers:
          type: boolean
          description: If true the style images per layer will look the same
        reduceNumberOfLayersBy:
          type: integer
          description:
            "Reducing the number of layers groups together layers in the\
            \ view. e.g. if 2 layers are reduced the first and second displayed layer\
            \ will actually be the first and second, and the third and fourth layers."
        stylesFromImages:
          type: array
          description:
            If present the generated styles will create images similar
            to these images. The images are stored in base64 encoding.
          items:
            type: string
        optimizeStyles:
          type: number
          description:
            If existent the generated styles will be optimized to one end
            of the evaluator ratings of the evaluation model with this id.
      example:
        numGenStylesPerLayer: 6
        reduceNumberOfLayersBy: 1
        stylesFromImages:
          - stylesFromImages
          - stylesFromImages
        useSameStylesForAllLayers: true
        optimizeStyles: 5.962133916683182377482808078639209270477294921875
    Generator:
      required:
        - numberOfLayers
        - offlineMode
        - settings
        - stepSize
      type: object
      properties:
        numberOfLayers:
          type: integer
          description: The number of layers of this model. (not affected by reduceNumberOfLayersBy)
        settings:
          $ref: "#/components/schemas/GeneratorSettings"
        stepSize:
          type: number
          description: All styles have to be rounded to this step size.
        offlineMode:
          type: boolean
          description: Use only get functions if this is true.
      example:
        settings:
          numGenStylesPerLayer: 6
          reduceNumberOfLayersBy: 1
          stylesFromImages:
            - stylesFromImages
            - stylesFromImages
          useSameStylesForAllLayers: true
          optimizeStyles: 5.962133916683182377482808078639209270477294921875
        offlineMode: true
        stepSize: 5.63737665663332876420099637471139430999755859375
        numberOfLayers: 0
      allOf:
        - $ref: "#/components/schemas/Model"
    Evaluator:
      type: object
      allOf:
        - $ref: "#/components/schemas/Model"
    StyleConfiguration:
      type: object
      properties:
        styleArray:
          type: array
          items:
            $ref: "#/components/schemas/StyleConfiguration_styleArray"
        singleStyle:
          $ref: "#/components/schemas/StyleConfiguration_singleStyle"
      description: Only one of styleArray and singleStyle may be present
    ModelsArray:
      required:
        - evaluators
        - generators
      type: object
      properties:
        generators:
          type: array
          items:
            $ref: "#/components/schemas/Generator"
        evaluators:
          type: array
          items:
            $ref: "#/components/schemas/Evaluator"
      example:
        generators:
          - settings:
              numGenStylesPerLayer: 6
              reduceNumberOfLayersBy: 1
              stylesFromImages:
                - stylesFromImages
                - stylesFromImages
              useSameStylesForAllLayers: true
              optimizeStyles: 5.962133916683182377482808078639209270477294921875
            offlineMode: true
            stepSize: 5.63737665663332876420099637471139430999755859375
            numberOfLayers: 0
          - settings:
              numGenStylesPerLayer: 6
              reduceNumberOfLayersBy: 1
              stylesFromImages:
                - stylesFromImages
                - stylesFromImages
              useSameStylesForAllLayers: true
              optimizeStyles: 5.962133916683182377482808078639209270477294921875
            offlineMode: true
            stepSize: 5.63737665663332876420099637471139430999755859375
            numberOfLayers: 0
        evaluators:
          - ""
          - ""
    EvaluateImagesBatch:
      required:
        - generatorId
        - styles
      type: object
      properties:
        generatorId:
          type: integer
        styles:
          type: array
          items:
            $ref: "#/components/schemas/StyleConfiguration"
    Style:
      required:
        - generatorId
        - style
      type: object
      properties:
        generatorId:
          type: integer
        style:
          $ref: "#/components/schemas/StyleConfiguration"
    StyleConfiguration_styleArray:
      required:
        - style1
      type: object
      properties:
        style1:
          type: integer
        style2:
          type: integer
        proportionStyle1:
          maximum: 1
          minimum: 0
          type: number
    StyleConfiguration_singleStyle:
      required:
        - id
        - layer
      type: object
      properties:
        layer:
          type: integer
        id:
          type: integer
