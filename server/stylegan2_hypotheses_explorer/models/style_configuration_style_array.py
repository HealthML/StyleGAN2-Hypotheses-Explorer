# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from ..util import deserialize_model
from .base_model_ import Base_Model


class StyleConfigurationStyleArray(Base_Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, style1: int = None, style2: int = None, proportion_style1: float = None):  # noqa: E501
        """StyleConfigurationStyleArray - a model defined in Swagger

        :param style1: The style1 of this StyleConfigurationStyleArray.  # noqa: E501
        :type style1: int
        :param style2: The style2 of this StyleConfigurationStyleArray.  # noqa: E501
        :type style2: int
        :param proportion_style1: The proportion_style1 of this StyleConfigurationStyleArray.  # noqa: E501
        :type proportion_style1: float
        """
        self.swagger_types = {
            'style1': int,
            'style2': int,
            'proportion_style1': float
        }

        self.attribute_map = {
            'style1': 'style1',
            'style2': 'style2',
            'proportion_style1': 'proportionStyle1'
        }
        self._style1 = style1
        self._style2 = style2
        self._proportion_style1 = proportion_style1

    @classmethod
    def from_dict(cls, dikt) -> 'StyleConfigurationStyleArray':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StyleConfiguration_styleArray of this StyleConfigurationStyleArray.  # noqa: E501
        :rtype: StyleConfigurationStyleArray
        """
        return deserialize_model(dikt, cls)

    @property
    def style1(self) -> int:
        """Gets the style1 of this StyleConfigurationStyleArray.


        :return: The style1 of this StyleConfigurationStyleArray.
        :rtype: int
        """
        return self._style1

    @style1.setter
    def style1(self, style1: int):
        """Sets the style1 of this StyleConfigurationStyleArray.


        :param style1: The style1 of this StyleConfigurationStyleArray.
        :type style1: int
        """
        if style1 is None:
            raise ValueError("Invalid value for `style1`, must not be `None`")  # noqa: E501

        self._style1 = style1

    @property
    def style2(self) -> int:
        """Gets the style2 of this StyleConfigurationStyleArray.


        :return: The style2 of this StyleConfigurationStyleArray.
        :rtype: int
        """
        return self._style2

    @style2.setter
    def style2(self, style2: int):
        """Sets the style2 of this StyleConfigurationStyleArray.


        :param style2: The style2 of this StyleConfigurationStyleArray.
        :type style2: int
        """

        self._style2 = style2

    @property
    def proportion_style1(self) -> float:
        """Gets the proportion_style1 of this StyleConfigurationStyleArray.


        :return: The proportion_style1 of this StyleConfigurationStyleArray.
        :rtype: float
        """
        return self._proportion_style1

    @proportion_style1.setter
    def proportion_style1(self, proportion_style1: float):
        """Sets the proportion_style1 of this StyleConfigurationStyleArray.


        :param proportion_style1: The proportion_style1 of this StyleConfigurationStyleArray.
        :type proportion_style1: float
        """

        self._proportion_style1 = proportion_style1
