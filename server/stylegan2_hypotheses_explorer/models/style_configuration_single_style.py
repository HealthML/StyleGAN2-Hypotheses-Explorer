# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from ..util import deserialize_model
from .base_model_ import Base_Model


class StyleConfigurationSingleStyle(Base_Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, layer: int = None, id: int = None):  # noqa: E501
        """StyleConfigurationSingleStyle - a model defined in Swagger

        :param layer: The layer of this StyleConfigurationSingleStyle.  # noqa: E501
        :type layer: int
        :param id: The id of this StyleConfigurationSingleStyle.  # noqa: E501
        :type id: int
        """
        self.swagger_types = {
            'layer': int,
            'id': int
        }

        self.attribute_map = {
            'layer': 'layer',
            'id': 'id'
        }
        self._layer = layer
        self._id = id

    @classmethod
    def from_dict(cls, dikt) -> 'StyleConfigurationSingleStyle':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StyleConfiguration_singleStyle of this StyleConfigurationSingleStyle.  # noqa: E501
        :rtype: StyleConfigurationSingleStyle
        """
        return deserialize_model(dikt, cls)

    @property
    def layer(self) -> int:
        """Gets the layer of this StyleConfigurationSingleStyle.


        :return: The layer of this StyleConfigurationSingleStyle.
        :rtype: int
        """
        return self._layer

    @layer.setter
    def layer(self, layer: int):
        """Sets the layer of this StyleConfigurationSingleStyle.


        :param layer: The layer of this StyleConfigurationSingleStyle.
        :type layer: int
        """
        if layer is None:
            raise ValueError("Invalid value for `layer`, must not be `None`")  # noqa: E501

        self._layer = layer

    @property
    def id(self) -> int:
        """Gets the id of this StyleConfigurationSingleStyle.


        :return: The id of this StyleConfigurationSingleStyle.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this StyleConfigurationSingleStyle.


        :param id: The id of this StyleConfigurationSingleStyle.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id
